// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  name           String
  role           String?
  accounts       Account[]
  sessions       Session[]
  // categories     Category[]       @relation(fields: [])
  // role Role @relation(fields: [roleId],references: [id])
  UserCategories UserCategories[]
}

model Account {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  email    String @unique
  password String
  user     User   @relation(fields: [userId], references: [id])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Category {
  id             Int              @id @default(autoincrement())
  title          String
  description    String           @db.Text
  // User           User?            @relation(fields: [userId], references: [id])
  userId         Int?
  UserCategories UserCategories[]
}

model UserCategories {
  id         Int      @id @default(autoincrement())
  userId     Int
  categoryId Int
  user       User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}

model News {
  id          Int        @id @default(autoincrement())
  title       String
  description String     @db.Text
  date        DateTime   @default(now())
  image       String[]
  NewsTag     NewsTags[]
}

model Tag {
  id      Int        @id @default(autoincrement())
  name    String
  NewsTag NewsTags[]
}

model NewsTags {
  id     Int  @id @default(autoincrement())
  newsId Int
  tagId  Int
  news   News @relation(fields: [newsId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])
}

model ContactUsForm {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  number    String
  subject   String
  message   String
  createdAt DateTime @default(now())
}

// TODO: create business partner model

model BusinessPartner {
  id                  Int      @id @default(autoincrement())
  fullName            String
  email               String
  streetAddress       String
  companyName         String
  phoneNumber         String
  countryOfEsidence   String
  streetAddressLine2  String
  investmentCeiling   String
  birthTime           DateTime
  provinceOfResidence String
  zipCode             BigInt
  yourPositionInTeam  String
  preferredInvestment String
  wayKnowUs           String
}
